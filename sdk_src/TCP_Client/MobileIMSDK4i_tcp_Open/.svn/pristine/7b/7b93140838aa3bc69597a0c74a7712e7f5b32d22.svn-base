//  ----------------------------------------------------------------------
//  Copyright (C) 2020  即时通讯网(52im.net) & Jack Jiang.
//  The MobileIMSDK_TCP (MobileIMSDK v5.x TCP版) Project.
//  All rights reserved.
//
//  > Github地址: https://github.com/JackJiang2011/MobileIMSDK
//  > 文档地址:    http://www.52im.net/forum-89-1.html
//  > 技术社区：   http://www.52im.net/
//  > 技术交流群： 320837163 (http://www.52im.net/topic-qqgroup.html)
//  > 作者公众号： “即时通讯技术圈】”，欢迎关注！
//  > 联系作者：   http://www.52im.net/thread-2792-1-1.html
//
//  "即时通讯网(52im.net) - 即时通讯开发者社区!" 推荐开源工程。
//  ----------------------------------------------------------------------

#import "TCPFrameCodec.h"

@implementation TCPFrameCodec

// 为了妥善解决TCP的半包、粘包经典问题，MobileIMSDK中使用“数据包头Header+数据包体Body”的TCP帧组织形式。
+ (NSData *)encodeFrame:(NSData *)bodyDataOfFrame
{
    if(bodyDataOfFrame != nil && [bodyDataOfFrame length] > 0)
    {
        //** 取出要发送数据的字节长度
        // 注意：网络字节序是大端，传输出去前要将主机字节序转为网络字节序，否则无法跟服务端正常通信
        int bodyLength = CFSwapInt32HostToBig((int)[bodyDataOfFrame length]);
        
        //** Header中的数据=Body的数据长度int整数（即定长4字节）
        NSData *headerData = [NSData dataWithBytes:&bodyLength length:TCP_FRAME_FIXED_HEADER_LENGTH];

        //** 拼接最络的数据包
        // 数据包头部就是数据的长度int值
        NSMutableData *frame = [NSMutableData dataWithData:headerData];
        // 数据包尾部加入真正要发送的数据
        [frame appendData:bodyDataOfFrame];
        
        return frame;
    }
    
    return nil;
}

// 将读取到的TCP帧中Header数据解码（有关MobileIMSDK中的TCP数据帧编码格式，请见 [TCPCodec encode:] 方法的说明）。
+ (int)decodeBodyLength:(NSData *)headerDataOfFrame
{
    int bodyLength = 0;
    if(headerDataOfFrame != nil && [headerDataOfFrame length] > 0)
    {
        // NSData转int
        [headerDataOfFrame getBytes:&bodyLength length:TCP_FRAME_FIXED_HEADER_LENGTH];
        // 收到的网络数据为大端字节序，需要转为主机字节序
        bodyLength = CFSwapInt32BigToHost(bodyLength);
    }
   
    return bodyLength;
}

@end
