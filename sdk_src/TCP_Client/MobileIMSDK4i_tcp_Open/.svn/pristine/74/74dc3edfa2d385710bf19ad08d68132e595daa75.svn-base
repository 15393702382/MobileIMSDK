//
//  TCPCodec.h
//  ios_echo_client_tcp2020
//
//  Created by Jack Jiang on 2020/6/30.
//  Copyright © 2020 Jack Jiang. All rights reserved.
//

#import <Foundation/Foundation.h>

// TODO: 修改为全局static变量，这样就可以让开发者自行修改了！！！！！！
// TODO: 修改为全局static变量，这样就可以让开发者自行修改了！！！！！！
// TODO: 修改为全局static变量，这样就可以让开发者自行修改了！！！！！！
// TODO: 修改为全局static变量，这样就可以让开发者自行修改了！！！！！！
// TODO: 修改为全局static变量，这样就可以让开发者自行修改了！！！！！！
// TODO: 修改为全局static变量，这样就可以让开发者自行修改了！！！！！！
#define TCP_FRAME_FIXED_HEADER_LENGTH     4    // 4 bytes
#define TCP_FRAME_MAX_BODY_LENGTH         6144 // 6K bytes

/**
 * MobileIMSDK的TCP半包、粘包编/解码实用工具类。
 *
 * @author Jack Jiang
 * @since 5.0
 */
@interface TCPFrameCodec : NSObject

/**
 * @brief 为了妥善解决TCP的半包、粘包经典问题，MobileIMSDK中使用“数据包头Header+数据包体Body”的帧组织形式。
 *
 * 即帧编码格式为：Header（存放的是body数据长度，定长4个字节int整数） + Body（真正的数据内容，不定长，长度应在Header的最大值之内）。
 * <pre>
 *  以发送一个字母“A”（即body为“A”）为例，以下是编码后的完整数据帧形式：
 *  + ------ Header (4 bytes)  ------ | --------   Body (1 bytes) -------- +
 *  +     0x0000 0000 0000 0001  |              0x0041                       +
 *  + -----（内容为int整数1）  ---- | （内容为字母“A”的ASCII码） +
 * </pre>
 *
 *  @param bodyDataOfFrame 要发送的真正数据内容，必须不为空（即不为nil且length > 0）
 *  @return 如果body不为空则返回编码后的完整数据帧(Header+Body)，否则返回nil
 */
+ (NSData *)encodeFrame:(NSData *)bodyDataOfFrame;

/**
 * 解码TCP帧的Header数据，得到Body的数据长度（有关MobileIMSDK中的TCP数据包帧编码格式，请见 [TCPCodec encode:] 方法的说明）。
 *
 * @return Header数据解码得到的int整数就是该TCP帧的Body数据长度（单位：字节）
 */
+ (int)decodeBodyLength:(NSData *)headerDataOfFrame;



@end
